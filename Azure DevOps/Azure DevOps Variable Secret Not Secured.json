{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "workspace": {
            "type": "String"
        }
    },
    "resources": [
        {
            "id": "[concat(resourceId('Microsoft.OperationalInsights/workspaces/providers', parameters('workspace'), 'Microsoft.SecurityInsights'),'/alertRules/azdev207-ig11-2305-2023-ecef01mk1088')]",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/azdev207-ig11-2305-2023-ecef01mk1088')]",
            "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
            "kind": "Scheduled",
            "apiVersion": "2022-09-01-preview",
            "properties": {
                "displayName": "Azure DevOps Variable Secret Not Secured",
                "description": "Credentials used in the build process may be stored as Azure DevOps variables. To secure these variables they should be stored in KeyVault or marked as Secrets. \nThis detection looks for new variables added with names that suggest they are credentials but where they are not set as Secrets or stored in KeyVault.",
                "severity": "Medium",
                "enabled": true,
                "query": "// Query: Azure DevOps Variable Secret Not Secured\n// Connector: AzureDevOpsAuditing\n// Author: Microsoft\n// Last Update: 23.05.2023 by Martin Kubinec (pridany Keywords, zmena v entitach)\n// Version 1.1\nlet var_keywords = dynamic(['secret', 'secrets', 'sec', 'password', 'PAT', 'passwd', 'pswd', 'pwd', 'cred', 'creds', 'credentials',  'credential', 'key', 'keys', 'heslo']);\nAzureDevOpsAuditing\n| where OperationName =~ 'Library.VariableGroupModified'\n| extend Type = tostring(Data.Type),\n         VariableGroupId = tostring(Data.VariableGroupId),\n         VariableGroupName = tostring(Data.VariableGroupName)\n| mv-expand Data.Variables\n| where VariableGroupName has_any (var_keywords) or Data_Variables has_any (var_keywords)\n| where Type != 'AzureKeyVault'\n| where Data_Variables !has 'IsSecret'\n| project-reorder TimeGenerated, ActorUPN, IpAddress\n| sort by TimeGenerated desc",
                "queryFrequency": "P1D",
                "queryPeriod": "P1D",
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "suppressionDuration": "PT5H",
                "suppressionEnabled": false,
                "startTimeUtc": null,
                "tactics": [
                    "CredentialAccess"
                ],
                "techniques": [
                    "T1552"
                ],
                "alertRuleTemplateName": "4ca74dc0-8352-4ac5-893c-73571cc78331",
                "incidentConfiguration": {
                    "createIncident": true,
                    "groupingConfiguration": {
                        "enabled": true,
                        "reopenClosedIncident": false,
                        "lookbackDuration": "P1D",
                        "matchingMethod": "Selected",
                        "groupByEntities": [
                            "Account",
                            "IP"
                        ],
                        "groupByAlertDetails": [
                            "DisplayName"
                        ],
                        "groupByCustomDetails": [
                            "Details"
                        ]
                    }
                },
                "eventGroupingSettings": {
                    "aggregationKind": "AlertPerResult"
                },
                "alertDetailsOverride": {
                    "alertDescriptionFormat": "New variables added with names that suggest they are credentials but where they are not set as Secrets or stored in KeyVault has been detected. \n{{ActorDisplayName}} {{Details}} from IP Address {{IpAddress}}. \nCredentials used in the build process may be stored as Azure DevOps variables. To secure these variables they should be stored in KeyVault or marked as Secrets.",
                    "alertDynamicProperties": []
                },
                "customDetails": {
                    "Details": "Details",
                    "ActorDisplayName": "ActorDisplayName"
                },
                "entityMappings": [
                    {
                        "entityType": "Account",
                        "fieldMappings": [
                            {
                                "identifier": "FullName",
                                "columnName": "ActorUPN"
                            },
                            {
                                "identifier": "ObjectGuid",
                                "columnName": "ActorUserId"
                            },
                            {
                                "identifier": "DisplayName",
                                "columnName": "ActorDisplayName"
                            }
                        ]
                    },
                    {
                        "entityType": "IP",
                        "fieldMappings": [
                            {
                                "identifier": "Address",
                                "columnName": "IpAddress"
                            }
                        ]
                    },
                    {
                        "entityType": "SecurityGroup",
                        "fieldMappings": [
                            {
                                "identifier": "DistinguishedName",
                                "columnName": "VariableGroupName"
                            },
                            {
                                "identifier": "ObjectGuid",
                                "columnName": "VariableGroupId"
                            }
                        ]
                    }
                ],
                "sentinelEntitiesMappings": null,
                "templateVersion": "1.0.1"
            }
        }
    ]
}